---
title: "White Stork Antimicrobial Resistance"
subtitle: "Data Cleaning"
author: "Raquel Francisco and Seth Lattner"
date: "2023-02-24"
output: html_document
---


### Processing script

This QMD file contains processing code for antimicrobial resistance data collected from White stork (*Ciconia ciconia*) in Madrid, Spain.

#### Load Packages/Data

```{r, message=FALSE, warning=FALSE}
#load required packages
library(readr)
library(dplyr)
library(tidyr)
library(skimr) 
library(here) 
```


```{r, message=FALSE, warning=FALSE}
#load in data
stork_AMR_raw <- read_csv(here::here("1 Data Cleaning Script","raw_data","StorkAMRraw_2020_2021.csv"))
```

Let's take a quick look at the data on hand. 

```{r}
dplyr::glimpse(stork_AMR_raw)
skimr::skim(stork_AMR_raw)
```

Just based on this, it looks like there might be a bit of cleaning we'll have to do before we can get much further. Landfill use index (`mean_lui`) data are missing for all observations from the year 2020 due to the COVID-19 pandemic and will thus be excluded from future landfill use analysis. Additionally, there are data missing from the columns `ad`, `age`, `fledged`, and `hatched`. 

No inputs for other variables stand out as being suspicious or blatantly wrong.

#### Data Cleaning

`NA` values in the `fledged` and `hatched` variables are more accurately represented by 0 - no eggs hatched or no eggs fledged. We will replace NA's with 0's to correct this. 

```{r}
d1 <- stork_AMR_raw %>%
  tidyr::replace_na(list(fledged = 0, hatched = 0))
skimr::skim(d1)
```

We would like to add a new column for multi-drug resistance (resistance to ≥3 antibiotic classes) into our dataframe. 

```{r}
#sum across antibiotic classes and create new column when sum ≥3  
d2 <- d1 %>%
  mutate(sum = rowSums(across(c(TET, SULF, AMIN, PHEN, MACR, BLACT, QUIN, POLIMYX)))) %>%
  mutate(MDR = ifelse(sum>2, 1, 0))
glimpse(d2)
```


We want to make two cleaned data files - one with only the 2021 data (which includes landfill use) and one with both 2020 and 2021 data.

```{r}
#filter out 2020 data
d3 <- d2 %>% filter(yr !=2020)
head(d3)
```


Let's assign at the end to some final variable, this makes it easier to add further cleaning steps above.

```{r}
#save 2021 data only
stork_AMR_2021 <- d3

#save for both years
stork_AMR_clean <- d2
```


#### Save Cleaned Data


```{r}
save_data_location <- here::here("2 Clean Data","stork_AMR_2021.rds")
saveRDS(stork_AMR_2021, file = save_data_location)

save_data_location2 <- here::here("2 Clean Data","stork_AMR_clean.rds")
saveRDS(stork_AMR_clean, file = save_data_location2)
```